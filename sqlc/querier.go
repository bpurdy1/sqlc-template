// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"
)

type Querier interface {
	//CountBackliteTasks
	//
	//  SELECT COUNT(id) FROM example_table
	CountBackliteTasks(ctx context.Context) (int64, error)
	//DeleteExample
	//
	//  DELETE FROM example_table
	//  WHERE id = ?
	//  RETURNING id, message, created_at, modified_at
	DeleteExample(ctx context.Context, id int64) (ExampleTable, error)
	//ExamplesCursorPage
	//
	//  SELECT id, message, created_at, modified_at
	//  FROM example_table
	//  WHERE id > ?
	//  ORDER BY id ASC
	//  LIMIT ?
	ExamplesCursorPage(ctx context.Context, arg *ExamplesCursorPageParams) ([]ExampleTable, error)
	//ExamplesOffsertPage
	//
	//  SELECT id, message, created_at, modified_at
	//  FROM example_table
	//  ORDER BY id ASC
	//  LIMIT ?
	//  OFFSET ?
	ExamplesOffsertPage(ctx context.Context, arg *ExamplesOffsertPageParams) ([]ExampleTable, error)
	//InsertExample
	//
	//  INSERT INTO example_table (message)
	//  VALUES (?)
	//  RETURNING id, message, created_at, modified_at
	InsertExample(ctx context.Context, message string) (ExampleTable, error)
	//ListExamples
	//
	//  SELECT id, message, created_at, modified_at FROM example_table ORDER BY id ASC
	ListExamples(ctx context.Context) ([]ExampleTable, error)
	//SelectByIdExample
	//
	//  SELECT id, message, created_at, modified_at FROM example_table WHERE id = ?
	SelectByIdExample(ctx context.Context, id int64) (ExampleTable, error)
	//UpdateExample
	//
	//  UPDATE example_table
	//  SET
	//      message = ?,
	//      modified_at = CURRENT_TIMESTAMP
	//  WHERE id = ?
	//  RETURNING id, message, created_at, modified_at
	UpdateExample(ctx context.Context, arg *UpdateExampleParams) (ExampleTable, error)
	//UpsertExample
	//
	//  INSERT INTO example_table (id, message)
	//  VALUES (?, ?)
	//  ON CONFLICT (id) DO UPDATE SET
	//      message = EXCLUDED.message,
	//      modified_at = CURRENT_TIMESTAMP
	//  RETURNING id, message, created_at, modified_at
	UpsertExample(ctx context.Context, arg *UpsertExampleParams) (ExampleTable, error)
}

var _ Querier = (*Queries)(nil)
